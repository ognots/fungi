apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fungi-worker
  labels:
    app: fungi-worker
spec:
  replicas: {{ .Values.spore.replicaCount }}
  selector:
    matchLabels:
      appRelease: {{ .Release.Name }}-fungi-worker
  template:
    metadata:
      labels:
        app: fungi-worker
        appRelease: {{ .Release.Name }}-fungi-worker
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.securityContext.runAsNonRoot }}
      securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        command: [
          "/usr/local/bin/spore", "run",
          "--task-count", "{{ .Values.spore.taskCount }}",
          "http://{{ .Release.Name }}-fungi-coord-service-internal.{{ .Release.Namespace }}.svc.cluster.local:5292",
        ]
        #command: ["tail", "-f", "/dev/null"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
{{- if .Values.secretName }}
          - name: FUNGUS_AUTH_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.secretName }}"
                key: "{{ .Values.secretKey }}"
{{- end }}
        resources:
{{ toYaml .Values.spore.resources | indent 10 }}
      nodeSelector:
{{ toYaml .Values.coord.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.coord.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.coord.tolerations | indent 8 }}
